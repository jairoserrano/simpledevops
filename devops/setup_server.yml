---

- hosts: 192.34.79.129
  remote_user: ubuntu
  become: yes
  become_method: sudo

  vars:
    app_name: ormuco
    repo_url: https://github.com/jairoserrano/simpledevops.git
    repo_remote: origin
    repo_version: master
    webapps_dir: /srv/webapps
    wsgi_file: app.py
    wsgi_callable: app

  tasks:

    - name: add nginx
      action: apt_repository repo={{ item }} state=present
      with_items:
        - ppa:nginx/stable

    - name: install main packages for python nginx build-essential
      action: apt pkg={{ item }} state=installed update_cache=yes state=latest
      with_items:
        - python-setuptools
        - python-imaging
        - git
        - nginx
        - build-essential
        - python-dev
        - uwsgi
        - uwsgi-emperor
        - uwsgi-plugin-python
        - ufw
        - python-pip

    - name: install various libraries with pip
      action: pip name={{ item }} state=present
      with_items:
        - uwsgi
        - Flask
        - Flask-Migrate
        - Flask-Script
        - Flask-SQLAlchemy
        - Flask-DebugToolbar

    - name: remove default nginx site
      action: file path=/etc/nginx/sites-enabled/default state=absent

    - name: write nginx.conf
      action: template src=templates/nginx.conf dest=/etc/nginx/nginx.conf

    - name: write uwsgi-emperor conf
      action: template src=templates/ormuco.ini dest=/etc/uwsgi-emperor/vassals/ormuco.ini

    - name: create webapps directory
      action: file dest=/srv/webapps state=directory

    - name: Enable UFW
      ufw: direction=incoming policy=deny state=enabled

    - name: UFW limit SSH
      ufw: rule=limit port=ssh

    - name: UFW open HTTP
      ufw: rule=allow port=http

    - name: ensure log directory
      action: file dest={{ webapps_dir }}/{{ app_name }}/log state=directory

    - name: ensure database directory
      action: file dest={{ webapps_dir }}/{{ app_name }}/db owner=www-data group=www-data mode=0744 state=directory

    - name: deploy code from repository
      action: git repo={{ repo_url }} dest={{ webapps_dir }}/{{ app_name }}/src remote={{ repo_remote }} version={{ repo_version }}

    - name: create nginx site config
      action: template src=templates/nginx_site.conf dest=/etc/nginx/sites-available/{{ app_name }}
      notify:
        - restart nginx

    - name: link nginx config
      action: file src=/etc/nginx/sites-available/{{ app_name }} dest=/etc/nginx/sites-enabled/{{ app_name }} state=link

    - name: run flask migrate
      shell: cd {{ webapps_dir }}/{{ app_name }}/src; python manage.py db upgrade

    - name: change permissions database
      shell: cd {{ webapps_dir }}/{{ app_name }}/db; chown www-data:www-data app.db

  handlers:
    - name: restart nginx
      action: service name=nginx state=restarted

    - name: restart emperor.uwsgi
      action: service name=emperor.uwsgi state=restarted
